{
  "name": "shave-template",
  "version": "0.1.9",
  "description": "Curly-brackets-free template module for populating HTML templates with dynamic data and building dynamic lists and tables.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "browserify -t brfs examples/index.js > examples/public/bundle.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bloodyKnuckles/shave-template.git"
  },
  "keywords": [
    "template",
    "HTML",
    "CSS",
    "selectors"
  ],
  "author": {
    "name": "Jay Scott ANDERSON"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bloodyKnuckles/shave-template/issues"
  },
  "homepage": "https://github.com/bloodyKnuckles/shave-template#readme",
  "devDependencies": {
    "brfs": "^1.4.3",
    "main-loop": "^3.2.0"
  },
  "dependencies": {
    "to-virtual-dom": "git+https://github.com/bloodyKnuckles/to-virtual-dom.git",
    "vdom-to-html": "^2.2.0",
    "virtual-dom": "^2.1.1",
    "vtree-select": "^2.0.0"
  },
  "readme": "# shave-template\n\nContent insertion is accomplished by targeting standard HTML tag names and other CSS selectors.\n\nThis module allows you to develop plain HTML/CSS templates with dummy data in the places dynamic\ndata will be inserted. The benefit is that the templates can be developed independently from the\nprogramming that dynamically incorporates data into the web page.\n\nYou can also use this module to build dynamic lists and tables. Use a selector to identify a\nportion of the provided template, such as a list item or a table row, and this module  will use\nit as a sub-template to be duplicated and populated with dynamic data for each member of a given\narray.\n\nIt also provides for layering templates. A page template can be wrapped by a sub-section template,\nthose together can be wrapped by a section template, and those by a site template. The number of\nnested template layers is unlimited.\n\nOnce the templates are compiled, this module applies an object you've provided that\nidentifies CSS selectors as key names paired with values, and replaces (or appends/prepends) the\ndefault content of the elements in the templates that are identified by the corresponding CSS\nselectors with the provided values.\n\nInput templates values may be type string or virtual-dom object.\n\nThis module returns a virtual-dom object useful for DOM-diffing.\n\n### example\n\n```\nvar fs = require('fs')\nvar main = require('main-loop')\nvar shaved = require('shave-template')\n\nvar button = fs.readFileSync('public/button.html', 'utf-8')\n\nvar loop = main({ n: 0 }, render, require('virtual-dom'))\ndocument.querySelector('#content').appendChild(loop.target)\n\nfunction render (state) {\n  return shaved(button, {\n    '#count': state.n,\n    'button': {onclick: onclick}\n  })\n  function onclick () {\n    loop.update({ n: state.n + 1 })\n  }\n}\n```\n\nbutton.html\n\n```\n    <h1>clicked <span id=\"count\">0</span> times</h1>\n    <button>click me!</button>\n```\n\nindex.html\n\n```\n<!doctype html>\n<html>\n  <body>\n    <div id=\"content\"></div>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n```\n\nExecute `npm run build` or `browserify -t brfs examples/index.js > examples/public/bundle.js` to compile the example code, then load the index.html file in a browser.\n\n### layering templates and map example\n\n```\nvar outer = fs.readFileSync('public/outer.html', 'utf-8')\nvar section = fs.readFileSync('public/section.html', 'utf-8')\nvar template = fs.readFileSync('public/template.html', 'utf-8')\n\nshaved([outer, section, template], {\n  '#sectionheader': 'Start Here:',\n  'div#message': {class: 'myclass', '_html': 'Clicker ready.'},\n  '#clicks': 'Clicks: ' + state.n,\n  '#mapme': {_map: {'li': ['one', 'two', 'three', 'four']}},\n  'button': {onclick: onclick, '_html': 'click here'}\n})\n```\n\n### license\n\nMIT\n",
  "readmeFilename": "README.md",
  "gitHead": "9235d1dc10ae69a1208f7901aa77c5574b9d5b86",
  "_id": "shave-template@0.1.9",
  "_shasum": "18ebb618d1d89aa874931b6a184234318e31cb2e",
  "_from": "shave-template@*"
}
